<?php

namespace Cpm\JovenesBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Cpm\JovenesBundle\Filter\CorreoFilter;

/**
 * CorreoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CorreoRepository extends EntityRepository
{
	static $sort_criteria = array("id" => "c.id" , "Fecha envio" => "c.fecha");
	
	public function findAllQuery($ciclo, $user_id = null) {
		$emConfig = $this->getEntityManager()->getConfiguration();
	    $emConfig->addCustomDatetimeFunction('YEAR', 'DoctrineExtensions\Query\Mysql\Year');
		$qb = $this->getEntityManager()->createQueryBuilder()
		->add('select','c')
		->add('from','CpmJovenesBundle:Correo c')
		->orderBy('c.fecha', 'DESC');
	
		if (!empty($user_id))
			$qb->andWhere('c.destinatario = :destinatario')
				->setParameter('destinatario',$user_id);
		$qb->andWhere('YEAR(c.fecha)= :ciclo')
				->setParameter('ciclo',$ciclo->getTitulo());
		return  $qb->getQuery();
	}
	
	public function getCantidadCorreosPorCiclo($user_id = null) {
		
//		$emConfig = $this->getEntityManager()->getConfiguration();
//	    $emConfig->addCustomDatetimeFunction('YEAR', 'DoctrineExtensions\Query\Mysql\Year');
// 	 	$emConfig->addCustomDatetimeFunction('MONTH', 'DoctrineExtensions\Query\Mysql\Month');
//    	$emConfig->addCustomDatetimeFunction('DAY', 'DoctrineExtensions\Query\Mysql\Day');
    
		$where="";
		if (!empty($user_id))
			$where.='AND correo.destinatario_id = '.$user_id;
		$rsm = new \Doctrine\ORM\Query\ResultSetMapping();
		$rsm->addEntityResult('CpmJovenesBundle:Ciclo', 'ciclo','ciclo');
		$rsm->addFieldResult('ciclo', 'id', 'id');
		$rsm->addFieldResult('ciclo', 'titulo', 'titulo');
		$rsm->addScalarResult('cant', 'cant');
		$query = $this->getEntityManager()->createNativeQuery('SELECT ciclo.id, ciclo.titulo, count(correo.fecha) as cant FROM Ciclo ciclo LEFT JOIN Correo correo ON ciclo.titulo=YEAR(correo.fecha) '.$where.' GROUP BY ciclo.titulo ORDER BY ciclo.titulo DESC', $rsm);
		return $query->getResult();
	}
	
	public function filterQuery(CorreoFilter $filter,$ciclo_activo,$sort_field = null, $sort_order) {
		$qb = $this->createQueryBuilder('c')->orderBy('c.fecha', 'DESC');
		if ($sort_field) {
			$field = (isset(CorreoRepository::$sort_criteria[$sort_field]))?CorreoRepository::$sort_criteria[$sort_field]:CorreoRepository::$sort_criteria['id'];
			$qb->orderBy($field,$sort_order);
		}
		
	/*	$cicloFilter = $filter->getCicloFilter();
		if  ($ciclo = $cicloFilter->getCiclo()) { 
			$qb->innerJoin('c.proyecto', 'p')->andWhere('p.ciclo = :ciclo')->setParameter('ciclo', $ciclo);
		}
		*/
	 	if ($filter->getFecha())
			$qb->andWhere('DATE(c.fecha) = :fecha')->setParameter('fecha',$filter->getFecha());
		if ($filter->getFechaMin())
			$qb->andWhere('c.fecha > :fechaMin')->setParameter('fechaMin',$filter->getFechaMin());
		if ($filter->getFechaMax())
			$qb->andWhere('c.fecha < :fechaMax')->setParameter('fechaMax',$filter->getFechaMax());
		if ($filter->getEmail())
			$qb->andWhere('c.email LIKE :email')->setParameter('email','%'.$filter->getEmail().'%');
	    if ($filter->getAsunto())
			$qb->andWhere('c.asunto LIKE :asunto')->setParameter('asunto',$filter->getAsunto());
	    if ($filter->getCuerpo())
			$qb->andWhere('c.cuerpo LIKE :cuerpo')->setParameter('cuerpo',$filter->getCuerpo());
	    if ($filter->getDestinatario())
			$qb->andWhere('c.destinatario = :destinatario')->setParameter('destinatario',$filter->getDestinatario());
	    if ($filter->getEmisor())
			$qb->andWhere('c.emisor = :emisor')->setParameter('emisor',$filter->getEmisor());
		/*if ($filter->getProyecto())
			$qb->innerJoin('c.proyecto', 'p')->andWhere('p = :proyecto')->setParameter('proyecto',$filter->getProyecto());;
			*/
			//$qb->andWhere('c.proyecto = :proyecto')->setParameter('proyecto',$filter->getProyecto());
		

		return $qb;
	}
	
}